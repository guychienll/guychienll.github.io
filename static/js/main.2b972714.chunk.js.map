{"version":3,"sources":["images/selfie.jpg","images/todolist.jpg","images/sixty-second-gaming.jpg","images/aqi-index-service.jpg","images/tictactoe.jpg","images/muses.jpg","images/canvas.jpg","components/About.tsx","components/Home.tsx","routes.tsx","components/Contact.tsx","SharedStyledComponents.tsx","Links.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Wrapper","styled","div","About","src","selfie","alt","Coulumn","Work","a","works","link","imgSrc","sixtySecondGaming","name","orderId","muses","canvas","works2","tictactoe","aqiIndexService","todolistImg","routes","key","component","path","sort","b","map","work","href","className","CornerButton","button","StyledLinks","ul","props","isHambergurOn","Links","onClick","toggleHambergur","route","to","NavgationArea","nav","Title","Container","App","useState","setIsHambergurOn","isHambergurOnHandler","state","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b972714.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selfie.e5779b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/todolist.9225eeff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sixty-second-gaming.ce2e066e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aqi-index-service.71a5c062.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tictactoe.f754f9f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/muses.d919de5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canvas.a45ac18c.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport selfie from \"../images/selfie.jpg\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  img,\n  h1,\n  p {\n    margin-top: 25px;\n  }\n  img {\n    width: 450px;\n    height: 450px;\n  }\n  h1 {\n    font-size: 3rem;\n    font-family: \"Amatic SC\", cursive;\n  }\n  p {\n    font-family: \"Amatic SC\", cursive;\n    width: 450px;\n    text-align: center;\n    font-size: 1.3rem;\n    line-height: 1.5rem;\n  }\n`;\n\nconst About: React.FC = () => {\n  return (\n    <Wrapper>\n      <img src={selfie} alt=\"selfie.png\" />\n      <h1>About me</h1>\n      <p>\n        I'm guy .I am a person who is curious about everything and likes magic\n        and programming. I graduated from Fu Jen Catholic University Information\n        Management, and I worked as a software engineer at titansoft. Here you\n        can see my portfolio. If you have any feedback, please feel welcome Tell\n        me, this allows me to make more progress and improve.\n      </p>\n    </Wrapper>\n  );\n};\nexport default About;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport todolistImg from \"../images/todolist.jpg\";\nimport sixtySecondGaming from \"../images/sixty-second-gaming.jpg\";\nimport aqiIndexService from \"../images/aqi-index-service.jpg\";\nimport tictactoe from \"../images/tictactoe.jpg\";\nimport muses from \"../images/muses.jpg\";\nimport canvas from \"../images/canvas.jpg\";\nconst Wrapper = styled.div`\n  min-width: 320px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Coulumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 10px 0 10px;\n`;\n\nconst Work = styled.a<{ href: string }>`\n  position: relative;\n  margin: 10px 0 10px 0;\n  img {\n    box-sizing: border-box;\n    display: block;\n    max-width: 280px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 5px;\n  }\n  .overlay {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 100%;\n    width: 100%;\n    opacity: 0;\n    transition: all 0.5s ease;\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: \"Amatic SC\", cursive;\n    font-size: 2rem;\n    color: #000;\n  }\n  :hover {\n    .overlay {\n      opacity: 0.7;\n    }\n    box-shadow: 0 0 10px 2px #bbb;\n  }\n`;\n\nconst works = [\n  {\n    link: \"https://guychienll.github.io/sixty-seconds-gaming/\",\n    imgSrc: sixtySecondGaming,\n    name: \"sixtySecondGaming.jpg\",\n    orderId: 3,\n  },\n  {\n    link: \"https://muses-6c8bb.web.app/menu\",\n    imgSrc: muses,\n    name: \"muses.jpg\",\n    orderId: 2,\n  },\n  {\n    link: \"https://guychienll.github.io/canvas\",\n    imgSrc: canvas,\n    name: \"canvas.jpg\",\n    orderId: 1,\n  },\n];\nconst works2 = [\n  {\n    link: \"https://guychienll.github.io/tictactoe/\",\n    imgSrc: tictactoe,\n    name: \"tictactoe.jpg\",\n    orderId: 1,\n  },\n  {\n    link: \"https://guychienll.github.io/aqi-index-service/\",\n    imgSrc: aqiIndexService,\n    name: \"aqiIndexService.jpg\",\n    orderId: 3,\n  },\n  {\n    link: \"https://guychienll.github.io/todolist\",\n    imgSrc: todolistImg,\n    name: \"todolist.jpg\",\n    orderId: 2,\n  },\n];\n\nconst Home: React.FC = () => {\n  return (\n    <Wrapper>\n      <Coulumn>\n        {works\n          .sort((a, b) => {\n            return a.orderId - b.orderId;\n          })\n          .map((work) => {\n            return (\n              <Work href={work.link}>\n                <img src={work.imgSrc} alt={work.name} />\n                <div className=\"overlay\">Click Me</div>\n              </Work>\n            );\n          })}\n      </Coulumn>\n      <Coulumn>\n        {works2\n          .sort((a, b) => {\n            return a.orderId - b.orderId;\n          })\n          .map((work) => {\n            return (\n              <Work href={work.link}>\n                <img src={work.imgSrc} alt={work.name} />\n                <div className=\"overlay\">Click Me</div>\n              </Work>\n            );\n          })}\n      </Coulumn>\n    </Wrapper>\n  );\n};\nexport default Home;\n","import About from \"./components/About\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\n\nexport const routes = [\n  {\n    orderId: 2,\n    key: \"About\",\n    component: About,\n    path: \"/about\",\n  },\n  {\n    orderId: 3,\n    key: \"Contact\",\n    component: Contact,\n    path: \"/contact\",\n  },\n  {\n    orderId: 1,\n    key: \"Home\",\n    component: Home,\n    path: \"/\",\n  },\n];\n","import React from \"react\";\n\nconst Contact: React.FC = () => {\n  return <div>Contact</div>;\n};\nexport default Contact;\n","import styled from \"styled-components\";\n\nexport const CornerButton = styled.button`\n  width: 35px;\n  height: 35px;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 1rem;\n  display: none;\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport { CornerButton } from \"./SharedStyledComponents\";\n\nconst StyledLinks = styled.ul<{ isHambergurOn: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  li {\n    a {\n      font-size: 1.5rem;\n      padding: 10px;\n      text-decoration: none;\n      &:visited {\n        color: black;\n      }\n    }\n  }\n  @media screen and (max-width: 768px) {\n    position: fixed;\n    top: ${(props) => (props.isHambergurOn ? 0 : \"-100%\")};\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    background-color: #eee;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    li {\n      padding: 10px;\n    }\n    transition: top 0.7s;\n  }\n`;\n\ninterface IProps {\n  isHambergurOn: boolean;\n  toggleHambergur: (state?: boolean) => void;\n}\n\nexport const Links: React.FC<IProps> = (props: IProps) => (\n  <StyledLinks isHambergurOn={props.isHambergurOn}>\n    <CornerButton\n      onClick={() => {\n        props.toggleHambergur();\n      }}\n    >\n      X\n    </CornerButton>\n    {routes\n      .sort((a, b) => {\n        return a.orderId - b.orderId;\n      })\n      .map((route) => (\n        <li key={route.key}>\n          <Link\n            onClick={() => {\n              props.toggleHambergur(false);\n            }}\n            to={route.path}\n          >\n            {route.key}\n          </Link>\n        </li>\n      ))}\n  </StyledLinks>\n);\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport styled from \"styled-components\";\nimport { CornerButton } from \"./SharedStyledComponents\";\nimport { Links } from \"./Links\";\n\nconst NavgationArea = styled.nav`\n  width: 100%;\n  height: 120px;\n  background: #fff;\n  z-index: 100;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  font-family: \"Amatic SC\", cursive;\n`;\n\nconst Title = styled.div`\n  font-size: 3rem;\n`;\n\nconst Container = styled.div`\n  max-width: 960px;\n  min-height: calc(100vh - 120px);\n  padding-top: 120px;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto 0 auto;\n`;\n\nconst App: React.FC = () => {\n  const [isHambergurOn, setIsHambergurOn] = useState(false);\n  const isHambergurOnHandler = (state = !isHambergurOn) => {\n    setIsHambergurOn(state);\n  };\n  return (\n    <Router>\n      <NavgationArea>\n        <Title>Guy Chien</Title>\n        {isHambergurOn ? null : (\n          <CornerButton\n            onClick={() => {\n              isHambergurOnHandler();\n            }}\n          >\n            ≡\n          </CornerButton>\n        )}\n        <Links\n          isHambergurOn={isHambergurOn}\n          toggleHambergur={isHambergurOnHandler}\n        />\n      </NavgationArea>\n      <Container>\n        <Switch>\n          {routes.map((route) => (\n            <Route key={route.key} exact path={route.path}>\n              {route.component}\n            </Route>\n          ))}\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}